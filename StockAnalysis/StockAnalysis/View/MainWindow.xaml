<Window x:Class="StockAnalysis.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:StockAnalysis.View"
        xmlns:model="clr-namespace:StockAnalysis.Model"
        xmlns:a="clr-namespace:StockAnalysis"
        mc:Ignorable="d" ResizeMode="CanResize"
        Title="RG Stock Analysis" Height="450" Width="800"
        WindowStyle="SingleBorderWindow" MinWidth="800" MinHeight="400"
        x:Name="MainWin" FontSize="18" FontFamily="Yu Gothic UI light" Foreground="#ffffffff">
    <Window.Resources>
        <Style TargetType="{x:Type Button}" x:Key="but_ActionButton">
            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}"/>
            <Setter Property="Margin" Value="0,0,2,0"/>
        </Style>
        <SineEase x:Key="IsBusyBarEasingInner" EasingMode="EaseInOut"/>
        <CubicEase x:Key="IsBusyBarEasingOuter" EasingMode="EaseInOut"/>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome   CornerRadius="0"
                                    NonClientFrameEdges="None"
                                    UseAeroCaptionButtons="True"
                                  />
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    
    <Window.Template>
        <ControlTemplate TargetType="{x:Type Window}">
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding Path=IsBusy, Source={x:Static a:App.app}}" Value="0">
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:2" From="-0.5" To="0.3" RepeatBehavior="Forever" AutoReverse="True" Storyboard.TargetName="IndicatorGradientStop0" Storyboard.TargetProperty="Offset" EasingFunction="{StaticResource IsBusyBarEasingOuter}"/>
                                <DoubleAnimation Duration="0:0:2" From=" 0.0" To="1.0" RepeatBehavior="Forever" AutoReverse="True" Storyboard.TargetName="IndicatorGradientStop1" Storyboard.TargetProperty="Offset" EasingFunction="{StaticResource IsBusyBarEasingInner}"/>
                                <DoubleAnimation Duration="0:0:2" From=" 0.7" To="1.5" RepeatBehavior="Forever" AutoReverse="True" Storyboard.TargetName="IndicatorGradientStop2" Storyboard.TargetProperty="Offset" EasingFunction="{StaticResource IsBusyBarEasingOuter}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:1" To="-0.5"  Storyboard.TargetName="IndicatorGradientStop0" Storyboard.TargetProperty="Offset" EasingFunction="{StaticResource IsBusyBarEasingOuter}"/>
                                <DoubleAnimation Duration="0:0:1" To=" 0.5"  Storyboard.TargetName="IndicatorGradientStop1" Storyboard.TargetProperty="Offset" EasingFunction="{StaticResource IsBusyBarEasingInner}"/>
                                <DoubleAnimation Duration="0:0:1" To=" 1.5"  Storyboard.TargetName="IndicatorGradientStop2" Storyboard.TargetProperty="Offset" EasingFunction="{StaticResource IsBusyBarEasingOuter}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
            </ControlTemplate.Triggers>
            
            <Border BorderBrush="White" BorderThickness="0.5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="{Binding Path=Top, Source={x:Static SystemParameters.WindowNonClientFrameThickness}}"/>
                        <RowDefinition Height="{Binding Path=Top, Source={x:Static SystemParameters.WindowResizeBorderThickness}}"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Border x:Name="TopBar" Grid.Row="0">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Offset="0.0" Color="#F000"/>
                                <GradientStop Offset="0.7" Color="#ffbada55"/>
                                <GradientStop Offset="1.0" Color="#0fff"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>

                    <Rectangle Grid.Row="1" x:Name="IndicatorBar">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop x:Name="IndicatorGradientStop0" Offset="0.0" Color="#F000"/>
                                <GradientStop x:Name="IndicatorGradientStop1" Offset="0.5" Color="#ffbada55"/>
                                <GradientStop x:Name="IndicatorGradientStop2" Offset="1.0" Color="#F000"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>

                    <Border Grid.Row="2" BorderBrush="Black" BorderThickness="4,0,4,4">
                        
                        <ContentControl Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                    </Border>
                </Grid>
            </Border>
        </ControlTemplate>
    </Window.Template>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="7*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Rectangle Grid.Column="0" MinWidth="100">
            <Rectangle.Fill>
                <RadialGradientBrush GradientOrigin="0.0,0.0" RadiusX="2.0" RadiusY="2.0">
                    <GradientStop Offset="-1.5" Color="#bada55"/>
                    <GradientStop Offset="0.8" Color="#f000"/>
                </RadialGradientBrush> 
            </Rectangle.Fill>
        </Rectangle>
        
        <GridSplitter Grid.Column="0" Grid.RowSpan="99" Width="3"/>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <StackPanel Margin="5" Grid.Row="0" VerticalAlignment="Stretch">
                <TextBlock Text="Stock Analysis"/>
                <TextBox Text="{Binding Path=., Source={x:Static a:App.APIKEY}}"/>
                <TextBlock Text="Add Symbol"/>
                <TextBox x:Name="SymbolBox"/>
                <Button Command="{Binding AddSymbolCommand}" CommandParameter="{Binding ElementName=SymbolBox, Path=Text}">
                    <Button.Content>
                        <TextBlock>
                            <Run Text="Start Downloading:"/>
                            <LineBreak/>
                            <Run Text="{Binding ElementName=SymbolBox, Path=Text}"/>
                        </TextBlock>
                    </Button.Content>
                </Button>
                <TextBlock Text="Downloaded Symbols:"/>
                <Button Command="{Binding ToggleBusy}">
                    <Button.Content>
                        <TextBlock Text="ToggleBusy"/>
                    </Button.Content>
                </Button>
            </StackPanel>
            
            <ItemsControl Grid.Row="1" ItemsSource="{Binding DownloadedFiles}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <local:VSymbol/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </Grid>

</Window>
